var int a;

struct pair
{
    var int x; 
    var int y;

    function void constructor(int a, int b)
    {
        x = 2 * a;
        y = b;
    }

    function int sum()
    {
        return x + y;
    }
}

struct coordinate : pair
{
    var int polar;

    function void constructor(int p)
    {
        polar = p;
    }
}

function int main()
{
    var int x;
    var char c;
	var bool b;
	var int* p;
	var int* func;
    var [char] str;
    var [int] static_arr;
    var [int] dyn_arr;
    var pair n;
    var coordinate co;

	str = "Hello, World!";

	b = true;
    c = 'Z';
	
    co = new coordinate(1);
    co.x = 8;
    print_int(co.polar);
    print_int(co.x);

    n = new pair(5, 6);
    n.x = 7;

    x = square(n.x, n.y);
    p = &x;

    print_char(c);
    print_int(*(p));

    x = n.sum();
    print_char(c);
    print_int(x);
    print_char(c);

    func = &square;
    x = func(5, 8);

    print_int(x);

    static_arr = [1, 2, 3, 4, 5];
    dyn_arr = new [int, 5];
    x = 0;

    while x < 5
    {
        print_char(' ');
        dyn_arr[x] = 2 * static_arr[x];
        print_int(dyn_arr[x]);
        x = x + 1;
    }

    return *(p) + 6;
}

function int square(int x, int y)
{
    return x * y;
}

function void print([char] str)
{
    var char c;
    var int i;

    c = 'a';
	i = -1;
	
	while i == -1 | c > 0
    {
		i = i + 1;
        c = str[i];
        print_char(c);
    }
}