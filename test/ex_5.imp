abstract struct algebraic_structure
{
    var char set;
    var char law;
}

struct monoid : algebraic_structure 
{
    var int id;

    function void constructor(char s, char l, int e)
    {
        set = s;
        law = l;
        id = e;
    }

    function int get_id()
    {
        return id;
    }
}

struct group : monoid
{
    var bool commutative;

    function void constructor(char s, char l, int e, bool comm)
    {
        constructor(s, l, e);
        commutative = comm;
    }
}

function int main()
{
    var monoid m;
    var group g;
    var algebraic_structure as;
    var bool b;
    var [char] str;
    var int* ptr;
    var int val;

    str = "Algebra program!";
    print(str);

    val = 8;
    ptr = &val;

    print_int(*(ptr));

    m = new monoid('N', '+', 0);
    print_char(m.set);
    print_int(m.get_id());
    print_int(addition(5, 6));

    as = new monoid('Q', '*', 1);
    print_char(as.set);

    g = new group('Z', '+', 0, true);
    print_char(g.set);

    b = m instanceof group;

    if b == true
    {
        print_int(42);
    }
    else
    {
        print_int(43);
    }

    return g.id;
}

function int addition(int x, int y)
{
    return x + y;
}

function void print([char] str)
{
    var char c;
    var int i;

    c = 'a';
	i = -1;
	
	while i == -1 | c > 0
    {
		i = i + 1;
        c = str[i];
        print_char(c);
    }
}